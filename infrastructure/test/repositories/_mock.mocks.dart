// Mocks generated by Mockito 5.0.12 from annotations
// in infrastructure/test/repositories/_mock.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:infrastructure/src/daos/interfaces.dart' as _i3;
import 'package:mockito/mockito.dart' as _i2;
import 'package:moor/moor.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [IEntityDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoreDao<T extends _i1.DataClass> extends _i2.Mock
    implements _i3.IEntityDao<T> {
  MockStoreDao() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<T>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
          returnValue: Future<List<T>>.value(<T>[])) as _i4.Future<List<T>>);
  @override
  _i4.Future<T?> getById(String? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
          returnValue: Future<T?>.value()) as _i4.Future<T?>);
  @override
  _i4.Future<int> insert(_i1.Insertable<T>? entity) =>
      (super.noSuchMethod(Invocation.method(#insert, [entity]),
          returnValue: Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<bool> updateWithId(_i1.Insertable<T>? entity) =>
      (super.noSuchMethod(Invocation.method(#updateWithId, [entity]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<int> deleteWithId(String? id) =>
      (super.noSuchMethod(Invocation.method(#deleteWithId, [id]),
          returnValue: Future<int>.value(0)) as _i4.Future<int>);
}
